package stackTest;

import java.util.EmptyStackException;
import java.util.Scanner;
import java.util.Stack;

import exception.NotPositiveInteger;

public class Stack_Prev_Next {
	static Stack <String> websites = new Stack<>();
	static Stack <String> passedSites = new Stack<>();
	static Scanner sc = new Scanner(System.in);

	
	public static void main(String[] args) {
		Boolean repeat = true;
		while (repeat) {
			System.out.println("--------------------------");
			System.out.println("--1. 사이트 방문하기");
			System.out.println("--2. 앞으로 이동하기");
			System.out.println("--3. 뒤로 이동하기");
			System.out.println("--4. 최근 방문한 사이트");
			System.out.println("--9. 종료");
			System.out.println("--------------------------");
			System.out.println("번호를 입력하세요>>");
			String input = sc.nextLine();
			

				switch (Integer.parseInt(input)) {
				case 1 : 
					goToSite();
					break;
				case 2 : 
					PrevSite();
					break;
				case 3 :
					nextSite();
					break;
				case 4 : 
					printList();
					break;
				case 9 :
					System.exit(0);
					repeat = false;
					break;
				}
			}

	}

	private static void printList() {
		System.out.println("----최근 방문한 사이트 순 정렬");
		for (int i = websites.size() - 1; i > -1; i--) {
			System.out.println(websites.get(i));
		}
	}

	private static void nextSite() {
		try {
			System.out.print("뒤로 가기>>");
			System.out.println(passedSites.peek());;
			websites.push(passedSites.pop());
			if (websites.size() < 0) throw new EmptyStackException();
		} catch (EmptyStackException e) {
			System.out.println("더 이상 방문할 사이트가 없습니다");
		}
	}

	private static void PrevSite() {
		try {
			System.out.print("앞으로 가기>>");
			System.out.println(websites.peek());;
			passedSites.push(websites.pop());		


		
	}

	private static void goToSite() {
		try {
			System.out.print("방문할 사이트 입력 >> ");
			String visitSite = sc.nextLine();
			websites.push(visitSite);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	



}
